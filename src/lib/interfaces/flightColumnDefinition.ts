export enum FlightColumnDataType {
  String = "string",
  Number = "number",
  ISO8601 = "ISO-8601",
};

export enum FlightColumnUnit {
  Hours = "Hours",
  Count = "Count",
};

export enum FlightColumnKey {
  DATE_TIME = "DATE_TIME",
  AIRCRAFT_TYPE = "AIRCRAFT_TYPE",
  AIRCRAFT_ID = "AIRCRAFT_ID",
  FROM = "FROM",
  ROUTE = "ROUTE",
  TO = "TO",
  OUT = "OUT",
  IN = "IN",
  TOTAL_TIME = "TOTAL_TIME",
  SINGLE_ENGINE = "SINGLE_ENGINE",
  MULTI_ENGINE = "MULTI_ENGINE",
  FIXED_WING = "FIXED_WING",
  TURBINE = "TURBINE",
  FIXED_WING_MULTI_ENGINE = "FIXED_WING_MULTI_ENGINE",
  FIXED_WING_TURBINE = "FIXED_WING_TURBINE",
  PIC = "PIC",
  FIXED_WING_PIC = "FIXED_WING_PIC",
  FIXED_WING_TURBINE_PIC = "FIXED_WING_TURBINE_PIC",
  SIC = "SIC",
  DUAL_GIVEN = "DUAL_GIVEN",
  XC = "XC",
  NIGHT = "NIGHT",
  NIGHT_UNAIDED = "NIGHT_UNAIDED",
  NVS = "NVS",
  NVG = "NVG",
  SIM_INST = "SIM_INST",
  DUAL_RCVD = "DUAL_RCVD",
  ACTUAL_INST = "ACTUAL_INST",
  SIMULATOR = "SIMULATOR",
  INSTRUCTOR = "INSTRUCTOR",
  DAY_T_O = "DAY_T/O",
  DAY_LDG = "DAY_LDG",
  NIGHT_T_O = "NIGHT_T/O",
  NIGHT_LDG = "NIGHT_LDG",
  ARR = "ARR",
  T_G = "T&G",
  BOL = "BOL",
  FCL = "FCL",
  SEA_LAND = "SEA/LAND",
  CATAPULT = "CATAPULT",
  SOLO = "SOLO",
  DAYSYSTEM = "DAYSYSTEM",
  WEATHER = "WEATHER",
  HOOD = "HOOD",
  SES = "SES",
  MES = "MES",
  TAXI = "TAXI",
  COMPLEX = "COMPLEX",
  CUSTOM = "CUSTOM",
  TAILDRAGGER = "TAILDRAGGER",
  INSTRUMENT_APPROACH = "INSTRUMENT_APPROACH",
  PRECISION_APPROACH = "PRECISION_APPROACH",
  NON_PRECISION_APPROACH = "NON_PRECISION_APPROACH",
  AIRCRAFT_COMMANDER = "AIRCRAFT_COMMANDER",
  SPECIAL_CREW_TIME = "SPECIAL_CREW_TIME",
  COMBAT_SORTIES = "COMBAT_SORTIES",
  SORTIES = "SORTIES",
  COMBAT = "COMBAT",
  MISSION_COMMANDER = "MISSION_COMMANDER",
  CIVILIAN_OTHER = "CIVILIAN_OTHER",
  TOT = "TOT",
  OT = "OT",
  OTR = "OTR",
  ORT = "ORT",
  SART = "SART",
  C_S_SRT = "C/S_SRT",
  HELO = "HELO",
  MILITARY = "MILITARY",
};

const flightColumnDisplayNames: Record<FlightColumnKey, string> = {
  [FlightColumnKey.DATE_TIME]: "Date/Time",
  [FlightColumnKey.AIRCRAFT_TYPE]: "Aircraft Type",
  [FlightColumnKey.AIRCRAFT_ID]: "Aircraft ID",
  [FlightColumnKey.FROM]: "From",
  [FlightColumnKey.ROUTE]: "Route",
  [FlightColumnKey.TO]: "To",
  [FlightColumnKey.OUT]: "Out",
  [FlightColumnKey.IN]: "In",
  [FlightColumnKey.TOTAL_TIME]: "Total Time",
  [FlightColumnKey.SINGLE_ENGINE]: "Single Engine",
  [FlightColumnKey.MULTI_ENGINE]: "Multi Engine",
  [FlightColumnKey.FIXED_WING]: "Fixed Wing",
  [FlightColumnKey.TURBINE]: "Turbine",
  [FlightColumnKey.FIXED_WING_MULTI_ENGINE]: "Fixed Wing Multi Engine",
  [FlightColumnKey.FIXED_WING_TURBINE]: "Fixed Wing Turbine",
  [FlightColumnKey.PIC]: "PIC",
  [FlightColumnKey.FIXED_WING_PIC]: "Fixed Wing PIC",
  [FlightColumnKey.FIXED_WING_TURBINE_PIC]: "Fixed Wing Turbine PIC",
  [FlightColumnKey.SIC]: "SIC",
  [FlightColumnKey.DUAL_GIVEN]: "Dual Given",
  [FlightColumnKey.XC]: "XC",
  [FlightColumnKey.NIGHT]: "Night",
  [FlightColumnKey.NIGHT_UNAIDED]: "Night Unaided",
  [FlightColumnKey.NVS]: "NVS",
  [FlightColumnKey.NVG]: "NVG",
  [FlightColumnKey.SIM_INST]: "Sim Inst",
  [FlightColumnKey.DUAL_RCVD]: "Dual Rcvd",
  [FlightColumnKey.ACTUAL_INST]: "Actual Inst",
  [FlightColumnKey.SIMULATOR]: "Simulator",
  [FlightColumnKey.INSTRUCTOR]: "Instructor",
  [FlightColumnKey.DAY_T_O]: "Day T/O",
  [FlightColumnKey.DAY_LDG]: "Day LDG",
  [FlightColumnKey.NIGHT_T_O]: "Night T/O",
  [FlightColumnKey.NIGHT_LDG]: "Night LDG",
  [FlightColumnKey.ARR]: "ARR",
  [FlightColumnKey.T_G]: "T&G",
  [FlightColumnKey.BOL]: "BOL",
  [FlightColumnKey.FCL]: "FCL",
  [FlightColumnKey.SEA_LAND]: "Sea/Land",
  [FlightColumnKey.CATAPULT]: "Catapult",
  [FlightColumnKey.SOLO]: "Solo",
  [FlightColumnKey.DAYSYSTEM]: "Day System",
  [FlightColumnKey.WEATHER]: "Weather",
  [FlightColumnKey.HOOD]: "Hood",
  [FlightColumnKey.SES]: "SES",
  [FlightColumnKey.MES]: "MES",
  [FlightColumnKey.TAXI]: "Taxi",
  [FlightColumnKey.COMPLEX]: "Complex",
  [FlightColumnKey.CUSTOM]: "Custom",
  [FlightColumnKey.TAILDRAGGER]: "Taildragger",
  [FlightColumnKey.INSTRUMENT_APPROACH]: "Instrument Approach",
  [FlightColumnKey.PRECISION_APPROACH]: "Precision Approach",
  [FlightColumnKey.NON_PRECISION_APPROACH]: "Non Precision Approach",
  [FlightColumnKey.AIRCRAFT_COMMANDER]: "Aircraft Commander",
  [FlightColumnKey.SPECIAL_CREW_TIME]: "Special Crew Time",
  [FlightColumnKey.COMBAT_SORTIES]: "Combat Sorties",
  [FlightColumnKey.SORTIES]: "Sorties",
  [FlightColumnKey.COMBAT]: "Combat",
  [FlightColumnKey.MISSION_COMMANDER]: "Mission Commander",
  [FlightColumnKey.CIVILIAN_OTHER]: "Civilian Other",
  [FlightColumnKey.TOT]: "TOT",
  [FlightColumnKey.OT]: "OT",
  [FlightColumnKey.OTR]: "OTR",
  [FlightColumnKey.ORT]: "ORT",
  [FlightColumnKey.SART]: "SART",
  [FlightColumnKey.C_S_SRT]: "C/S_SRT",
  [FlightColumnKey.HELO]: "Helicopter",
  [FlightColumnKey.MILITARY]: "Military",
}

const flightColumnDescriptions: Record<FlightColumnKey, string> = {
  [FlightColumnKey.DATE_TIME]: "Date of flight",
  [FlightColumnKey.AIRCRAFT_TYPE]: "The model and manufacturer of the aircraft flown",
  [FlightColumnKey.AIRCRAFT_ID]: "The registration number or tail number of the aircraft",
  [FlightColumnKey.FROM]: "Departing Airport",
  [FlightColumnKey.ROUTE]: "The planned flight path, including waypoints, airways, or direct routing between departure and destination",
  [FlightColumnKey.TO]: "Arriving Airport",
  [FlightColumnKey.OUT]: "The time the aircraft began taxiing for departure",
  [FlightColumnKey.IN]: "The time the aircraft arrived at the destination and stopped taxiing",
  [FlightColumnKey.TOTAL_TIME]: "Total Flight Hours",
  [FlightColumnKey.SINGLE_ENGINE]: "Single Engine Time",
  [FlightColumnKey.MULTI_ENGINE]: "Multi Engine Time",
  [FlightColumnKey.FIXED_WING]: "Fixed Wing Time",
  [FlightColumnKey.TURBINE]: "Turbine Time",
  [FlightColumnKey.FIXED_WING_MULTI_ENGINE]: "Fixed Wing Multi Engine Time",
  [FlightColumnKey.FIXED_WING_TURBINE]: "Fixed Wing Turbine Time",
  [FlightColumnKey.PIC]: "Pilot in Command",
  [FlightColumnKey.FIXED_WING_PIC]: "Pilot in Command of a fixed-wing aircraft",
  [FlightColumnKey.FIXED_WING_TURBINE_PIC]: "Pilot in Command of a fixed-wing turbine aircraft",
  [FlightColumnKey.SIC]: "Second in Command",
  [FlightColumnKey.DUAL_GIVEN]: "Flight instruction provided by a certified flight instructor (CFI) to a student or another pilot. The instructor logs this time to track their teaching experience.",
  [FlightColumnKey.DUAL_RCVD]: "Dual Received. Flight training conducted with an instructor, where the pilot receiving instruction is not acting as Pilot-in-Command (PIC).",
  [FlightColumnKey.XC]: "Cross Country Flight Time",
  [FlightColumnKey.NIGHT]: "Time logged during night operations, typically defined as the period between the end of evening civil twilight and the beginning of morning civil twilight",
  [FlightColumnKey.NIGHT_UNAIDED]: "Night flight conducted without the use of night vision devices",
  [FlightColumnKey.NVS]: "Night Vision System",
  [FlightColumnKey.NVG]: "Night Vision Goggles",
  [FlightColumnKey.SIM_INST]: "Simulation Instrument Time",
  [FlightColumnKey.ACTUAL_INST]: "Actual Instrument Time",
  [FlightColumnKey.SIMULATOR]: "Simulator Time",
  [FlightColumnKey.INSTRUCTOR]: "A certified flight instructor (CFI) or training captain responsible for teaching and evaluating pilots in flight or simulator sessions.",
  [FlightColumnKey.DAY_T_O]: "Day Takeoff",
  [FlightColumnKey.DAY_LDG]: "Day Landing",
  [FlightColumnKey.NIGHT_T_O]: "Night Takeoff",
  [FlightColumnKey.NIGHT_LDG]: "Night Landing",
  [FlightColumnKey.ARR]: "Full-stop landings logged at a destination airport",
  [FlightColumnKey.T_G]: "Touch and Go landings, where the aircraft touches down and immediately takes off again without stopping",
  [FlightColumnKey.BOL]: "Bounce and Land entries, where a bounce occurs before a full landing",
  [FlightColumnKey.FCL]: "Full-stop landings, emphasizing those necessary to meet recency requirements",
  [FlightColumnKey.SEA_LAND]: "A designation for whether the landing occurred on water (seaplane) or land",
  [FlightColumnKey.CATAPULT]: "Entries from catapult-assisted takeoffs, typically recorded by pilots operating aircraft from aircraft carriers or other launch systems",
  [FlightColumnKey.SOLO]: "Solo Flight Hours",
  [FlightColumnKey.DAYSYSTEM]: "Flying during daylight hours",
  [FlightColumnKey.WEATHER]: "Actual instrument conditions due to weather",
  [FlightColumnKey.HOOD]: "Refers to flying an aircraft using a device (commonly a hood or a vision-restricting device) designed to simulate Instrument Flight Conditions (IFR) for training purposes",
  [FlightColumnKey.SES]: "Single Engine Seaplane",
  [FlightColumnKey.MES]: "Multi Engine Seaplane",
  [FlightColumnKey.TAXI]: "Non-flight time. For planes on land moving to gates or terminals",
  [FlightColumnKey.COMPLEX]: "Flight time with a complex aircraft",
  [FlightColumnKey.CUSTOM]: "Flight time with a custom aircraft",
  [FlightColumnKey.TAILDRAGGER]: "Flight time with an aircraft with a tailwheel",
  [FlightColumnKey.INSTRUMENT_APPROACH]: "Any landing approach procedure performed under Instrument Flight Rules (IFR) using aircraft instruments and navigation aids rather than visual cues alone",
  [FlightColumnKey.PRECISION_APPROACH]: "An instrument approach that provides both lateral (left/right) and vertical (up/down) guidance to pilots down to a specific decision altitude (DA)",
  [FlightColumnKey.NON_PRECISION_APPROACH]: "Instrument approach providing only lateral guidance (left/right) with no electronic vertical guidance",
  [FlightColumnKey.AIRCRAFT_COMMANDER]: "Time logged as Aircraft Commander, a designation used in military or multi-crew environments where responsibilities are clearly defined",
  [FlightColumnKey.SPECIAL_CREW_TIME]: "Time logged for special crew roles (e.g., flight engineer, navigator, instructor) that are not standard pilot positions",
  [FlightColumnKey.COMBAT_SORTIES]: "Specific combat-oriented flight",
  [FlightColumnKey.SORTIES]: "Military Sorties/Operations",
  [FlightColumnKey.COMBAT]: "Combat flight time",
  [FlightColumnKey.MISSION_COMMANDER]: "Hours spent as a mission commander (used in a military context)",
  [FlightColumnKey.CIVILIAN_OTHER]: "Non-military civilian flights or operations not fitting standard categories",
  [FlightColumnKey.TOT]: "Time on Target",
  [FlightColumnKey.OT]: "Flights or tasks not specifically categorized",
  [FlightColumnKey.OTR]: "General operational proficiency training",
  [FlightColumnKey.ORT]: "Flights assessing operational readiness",
  [FlightColumnKey.SART]: "Search and Rescue Training",
  [FlightColumnKey.C_S_SRT]: "Copilot/Student Sortie",
  [FlightColumnKey.HELO]: "Helicopter flight time",
  [FlightColumnKey.MILITARY]: "Military flight time",
};

export interface FlightColumnDefinition {
  headerName: FlightColumnKey;
  displayName: string;
  dataType: FlightColumnDataType;
  generated?: boolean;
  unit?: FlightColumnUnit;
  description: string;
};

export const flightColumnDefinitions: FlightColumnDefinition[] = [
  {
    headerName: FlightColumnKey.DATE_TIME,
    displayName: flightColumnDisplayNames[FlightColumnKey.DATE_TIME],
    dataType: FlightColumnDataType.ISO8601,
    description: flightColumnDescriptions[FlightColumnKey.DATE_TIME],
  },
  {
    headerName: FlightColumnKey.AIRCRAFT_TYPE,
    displayName: flightColumnDisplayNames[FlightColumnKey.AIRCRAFT_TYPE],
    dataType: FlightColumnDataType.String,
    description: flightColumnDescriptions[FlightColumnKey.AIRCRAFT_TYPE],
  },
  {
    headerName: FlightColumnKey.AIRCRAFT_ID,
    displayName: flightColumnDisplayNames[FlightColumnKey.AIRCRAFT_ID],
    dataType: FlightColumnDataType.String,
    description: flightColumnDescriptions[FlightColumnKey.AIRCRAFT_ID],
  },
  {
    headerName: FlightColumnKey.FROM,
    displayName: flightColumnDisplayNames[FlightColumnKey.FROM],
    dataType: FlightColumnDataType.String,
    description: flightColumnDescriptions[FlightColumnKey.FROM],
  },
  {
    headerName: FlightColumnKey.ROUTE,
    displayName: flightColumnDisplayNames[FlightColumnKey.ROUTE],
    dataType: FlightColumnDataType.String,
    description: flightColumnDescriptions[FlightColumnKey.ROUTE],
  },
  {
    headerName: FlightColumnKey.TO,
    displayName: flightColumnDisplayNames[FlightColumnKey.TO],
    dataType: FlightColumnDataType.String,
    description: flightColumnDescriptions[FlightColumnKey.TO],
  },
  {
    headerName: FlightColumnKey.OUT,
    displayName: flightColumnDisplayNames[FlightColumnKey.OUT],
    dataType: FlightColumnDataType.String,
    description: flightColumnDescriptions[FlightColumnKey.OUT],
  },
  {
    headerName: FlightColumnKey.IN,
    displayName: flightColumnDisplayNames[FlightColumnKey.IN],
    dataType: FlightColumnDataType.String,
    description: flightColumnDescriptions[FlightColumnKey.IN],
  },
  {
    headerName: FlightColumnKey.TOTAL_TIME,
    displayName: flightColumnDisplayNames[FlightColumnKey.TOTAL_TIME],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.TOTAL_TIME],
  },
  {
    headerName: FlightColumnKey.SINGLE_ENGINE,
    displayName: flightColumnDisplayNames[FlightColumnKey.SINGLE_ENGINE],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.SINGLE_ENGINE],
    generated: true,
  },
  {
    headerName: FlightColumnKey.MULTI_ENGINE,
    displayName: flightColumnDisplayNames[FlightColumnKey.MULTI_ENGINE],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.MULTI_ENGINE],
    generated: true,
  },
  {
    headerName: FlightColumnKey.FIXED_WING,
    displayName: flightColumnDisplayNames[FlightColumnKey.FIXED_WING],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.FIXED_WING],
    generated: true,
  },
  {
    headerName: FlightColumnKey.TURBINE,
    displayName: flightColumnDisplayNames[FlightColumnKey.TURBINE],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.TURBINE],
    generated: true,
  },
  {
    headerName: FlightColumnKey.FIXED_WING_MULTI_ENGINE,
    displayName: flightColumnDisplayNames[FlightColumnKey.FIXED_WING_MULTI_ENGINE],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.FIXED_WING_MULTI_ENGINE],
    generated: true,
  },
  {
    headerName: FlightColumnKey.FIXED_WING_TURBINE,
    displayName: flightColumnDisplayNames[FlightColumnKey.FIXED_WING_TURBINE],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.FIXED_WING_TURBINE],
    generated: true,
  },
  {
    headerName: FlightColumnKey.PIC,
    displayName: flightColumnDisplayNames[FlightColumnKey.PIC],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.PIC],
  },
  {
    headerName: FlightColumnKey.FIXED_WING_PIC,
    displayName: flightColumnDisplayNames[FlightColumnKey.FIXED_WING_PIC],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.FIXED_WING_PIC],
    generated: true,
  },
  {
    headerName: FlightColumnKey.FIXED_WING_TURBINE_PIC,
    displayName: flightColumnDisplayNames[FlightColumnKey.FIXED_WING_TURBINE_PIC],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.FIXED_WING_TURBINE_PIC],
    generated: true,
  },
  {
    headerName: FlightColumnKey.SIC,
    displayName: flightColumnDisplayNames[FlightColumnKey.SIC],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.SIC],
  },
  {
    headerName: FlightColumnKey.DUAL_GIVEN,
    displayName: flightColumnDisplayNames[FlightColumnKey.DUAL_GIVEN],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.DUAL_GIVEN],
  },
  {
    headerName: FlightColumnKey.XC,
    displayName: flightColumnDisplayNames[FlightColumnKey.XC],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.XC],
  },
  {
    headerName: FlightColumnKey.NIGHT,
    displayName: flightColumnDisplayNames[FlightColumnKey.NIGHT],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.NIGHT],
  },
  {
    headerName: FlightColumnKey.NIGHT_UNAIDED,
    displayName: flightColumnDisplayNames[FlightColumnKey.NIGHT_UNAIDED],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.NIGHT_UNAIDED],
  },
  {
    headerName: FlightColumnKey.NVS,
    displayName: flightColumnDisplayNames[FlightColumnKey.NVS],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.NVS],
  },
  {
    headerName: FlightColumnKey.NVG,
    displayName: flightColumnDisplayNames[FlightColumnKey.NVG],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.NVG],
  },
  {
    headerName: FlightColumnKey.SIM_INST,
    displayName: flightColumnDisplayNames[FlightColumnKey.SIM_INST],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.SIM_INST],
  },
  {
    headerName: FlightColumnKey.DUAL_RCVD,
    displayName: flightColumnDisplayNames[FlightColumnKey.DUAL_RCVD],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.DUAL_RCVD],
  },
  {
    headerName: FlightColumnKey.ACTUAL_INST,
    displayName: flightColumnDisplayNames[FlightColumnKey.ACTUAL_INST],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.ACTUAL_INST],
  },
  {
    headerName: FlightColumnKey.SIMULATOR,
    displayName: flightColumnDisplayNames[FlightColumnKey.SIMULATOR],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.SIMULATOR],
  },
  {
    headerName: FlightColumnKey.INSTRUCTOR,
    displayName: flightColumnDisplayNames[FlightColumnKey.INSTRUCTOR],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.INSTRUCTOR],
  },
  {
    headerName: FlightColumnKey.DAY_T_O,
    displayName: flightColumnDisplayNames[FlightColumnKey.DAY_T_O],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Count,
    description: flightColumnDescriptions[FlightColumnKey.DAY_T_O],
  },
  {
    headerName: FlightColumnKey.DAY_LDG,
    displayName: flightColumnDisplayNames[FlightColumnKey.DAY_LDG],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Count,
    description: flightColumnDescriptions[FlightColumnKey.DAY_LDG],
  },
  {
    headerName: FlightColumnKey.NIGHT_T_O,
    displayName: flightColumnDisplayNames[FlightColumnKey.NIGHT_T_O],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Count,
    description: flightColumnDescriptions[FlightColumnKey.NIGHT_T_O],
  },
  {
    headerName: FlightColumnKey.NIGHT_LDG,
    displayName: flightColumnDisplayNames[FlightColumnKey.NIGHT_LDG],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Count,
    description: flightColumnDescriptions[FlightColumnKey.NIGHT_LDG],
  },
  {
    headerName: FlightColumnKey.ARR,
    displayName: flightColumnDisplayNames[FlightColumnKey.ARR],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Count,
    description: flightColumnDescriptions[FlightColumnKey.ARR],
  },
  {
    headerName: FlightColumnKey.T_G,
    displayName: flightColumnDisplayNames[FlightColumnKey.T_G],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Count,
    description: flightColumnDescriptions[FlightColumnKey.T_G],
  },
  {
    headerName: FlightColumnKey.BOL,
    displayName: flightColumnDisplayNames[FlightColumnKey.BOL],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Count,
    description: flightColumnDescriptions[FlightColumnKey.BOL],
  },
  {
    headerName: FlightColumnKey.FCL,
    displayName: flightColumnDisplayNames[FlightColumnKey.FCL],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Count,
    description: flightColumnDescriptions[FlightColumnKey.FCL],
  },
  {
    headerName: FlightColumnKey.SEA_LAND,
    displayName: flightColumnDisplayNames[FlightColumnKey.SEA_LAND],
    dataType: FlightColumnDataType.String,
    description: flightColumnDescriptions[FlightColumnKey.SEA_LAND],
  },
  {
    headerName: FlightColumnKey.CATAPULT,
    displayName: flightColumnDisplayNames[FlightColumnKey.CATAPULT],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Count,
    description: flightColumnDescriptions[FlightColumnKey.CATAPULT],
  },
  {
    headerName: FlightColumnKey.SOLO,
    displayName: flightColumnDisplayNames[FlightColumnKey.SOLO],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.SOLO],
  },
  {
    headerName: FlightColumnKey.DAYSYSTEM,
    displayName: flightColumnDisplayNames[FlightColumnKey.DAYSYSTEM],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.DAYSYSTEM],
  },
  {
    headerName: FlightColumnKey.WEATHER,
    displayName: flightColumnDisplayNames[FlightColumnKey.WEATHER],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.WEATHER],
  },
  {
    headerName: FlightColumnKey.HOOD,
    displayName: flightColumnDisplayNames[FlightColumnKey.HOOD],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.HOOD],
  },
  {
    headerName: FlightColumnKey.SES,
    displayName: flightColumnDisplayNames[FlightColumnKey.SES],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.SES],
  },
  {
    headerName: FlightColumnKey.MES,
    displayName: flightColumnDisplayNames[FlightColumnKey.MES],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.MES],
  },
  {
    headerName: FlightColumnKey.TAXI,
    displayName: flightColumnDisplayNames[FlightColumnKey.TAXI],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.TAXI],
  },
  {
    headerName: FlightColumnKey.COMPLEX,
    displayName: flightColumnDisplayNames[FlightColumnKey.COMPLEX],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.COMPLEX],
  },
  {
    headerName: FlightColumnKey.CUSTOM,
    displayName: flightColumnDisplayNames[FlightColumnKey.CUSTOM],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.CUSTOM],
  },
  {
    headerName: FlightColumnKey.TAILDRAGGER,
    displayName: flightColumnDisplayNames[FlightColumnKey.TAILDRAGGER],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.TAILDRAGGER],
  },
  {
    headerName: FlightColumnKey.INSTRUMENT_APPROACH,
    displayName: flightColumnDisplayNames[FlightColumnKey.INSTRUMENT_APPROACH],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Count,
    description: flightColumnDescriptions[FlightColumnKey.INSTRUMENT_APPROACH],
  },
  {
    headerName: FlightColumnKey.PRECISION_APPROACH,
    displayName: flightColumnDisplayNames[FlightColumnKey.PRECISION_APPROACH],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Count,
    description: flightColumnDescriptions[FlightColumnKey.PRECISION_APPROACH],
  },
  {
    headerName: FlightColumnKey.NON_PRECISION_APPROACH,
    displayName: flightColumnDisplayNames[FlightColumnKey.NON_PRECISION_APPROACH],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Count,
    description: flightColumnDescriptions[FlightColumnKey.NON_PRECISION_APPROACH],
  },
  {
    headerName: FlightColumnKey.AIRCRAFT_COMMANDER,
    displayName: flightColumnDisplayNames[FlightColumnKey.AIRCRAFT_COMMANDER],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.AIRCRAFT_COMMANDER],
  },
  {
    headerName: FlightColumnKey.SPECIAL_CREW_TIME,
    displayName: flightColumnDisplayNames[FlightColumnKey.SPECIAL_CREW_TIME],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.SPECIAL_CREW_TIME],
  },
  {
    headerName: FlightColumnKey.COMBAT_SORTIES,
    displayName: flightColumnDisplayNames[FlightColumnKey.COMBAT_SORTIES],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Count,
    description: flightColumnDescriptions[FlightColumnKey.COMBAT_SORTIES],
  },
  {
    headerName: FlightColumnKey.SORTIES,
    displayName: flightColumnDisplayNames[FlightColumnKey.SORTIES],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Count,
    description: flightColumnDescriptions[FlightColumnKey.SORTIES],
  },
  {
    headerName: FlightColumnKey.COMBAT,
    displayName: flightColumnDisplayNames[FlightColumnKey.COMBAT],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.COMBAT],
  },
  {
    headerName: FlightColumnKey.MISSION_COMMANDER,
    displayName: flightColumnDisplayNames[FlightColumnKey.MISSION_COMMANDER],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.MISSION_COMMANDER],
  },
  {
    headerName: FlightColumnKey.CIVILIAN_OTHER,
    displayName: flightColumnDisplayNames[FlightColumnKey.CIVILIAN_OTHER],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.CIVILIAN_OTHER],
  },
  {
    headerName: FlightColumnKey.TOT,
    displayName: flightColumnDisplayNames[FlightColumnKey.TOT],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.TOT],
  },
  {
    headerName: FlightColumnKey.OT,
    displayName: flightColumnDisplayNames[FlightColumnKey.OT],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.OT],
  },
  {
    headerName: FlightColumnKey.OTR,
    displayName: flightColumnDisplayNames[FlightColumnKey.OTR],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.OTR],
  },
  {
    headerName: FlightColumnKey.ORT,
    displayName: flightColumnDisplayNames[FlightColumnKey.ORT],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.ORT],
  },
  {
    headerName: FlightColumnKey.SART,
    displayName: flightColumnDisplayNames[FlightColumnKey.SART],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.SART],
  },
  {
    headerName: FlightColumnKey.C_S_SRT,
    displayName: flightColumnDisplayNames[FlightColumnKey.C_S_SRT],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Count,
    description: flightColumnDescriptions[FlightColumnKey.C_S_SRT],
  },
  {
    headerName: FlightColumnKey.HELO,
    displayName: flightColumnDisplayNames[FlightColumnKey.HELO],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.HELO],
    generated: true,
  },
  {
    headerName: FlightColumnKey.MILITARY,
    displayName: flightColumnDisplayNames[FlightColumnKey.MILITARY],
    dataType: FlightColumnDataType.Number,
    unit: FlightColumnUnit.Hours,
    description: flightColumnDescriptions[FlightColumnKey.MILITARY],
    generated: true,
  }
];
